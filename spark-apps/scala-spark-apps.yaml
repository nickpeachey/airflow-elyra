apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: scala-data-processing
  namespace: spark
  labels:
    app: scala-spark-job
spec:
  type: Scala
  mode: cluster
  image: "apache/spark:3.5.0-scala2.12-java11-python3-ubuntu"
  imagePullPolicy: Always
  mainClass: "com.example.DataProcessing"
  mainApplicationFile: "s3a://data-lake/spark-jobs/data-processing_2.12-1.0.jar"
  sparkVersion: "3.5.0"
  arguments:
    - "s3a://data-lake/input/"
    - "s3a://processed-data/output/"
  
  # Hadoop and S3 configuration for LocalStack
  hadoopConf:
    "fs.s3a.endpoint": "http://localstack-service.localstack.svc.cluster.local:4566"
    "fs.s3a.access.key": "test"
    "fs.s3a.secret.key": "test"
    "fs.s3a.path.style.access": "true"
    "fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "fs.s3a.aws.credentials.provider": "org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider"
    "fs.s3a.connection.ssl.enabled": "false"
  
  # Spark configuration
  sparkConf:
    "spark.sql.adaptive.enabled": "true"
    "spark.sql.adaptive.coalescePartitions.enabled": "true"
    "spark.sql.adaptive.skewJoin.enabled": "true"
    "spark.kubernetes.container.image.pullPolicy": "Always"
    "spark.kubernetes.namespace": "spark"
    "spark.kubernetes.authenticate.driver.serviceAccountName": "spark-driver"
    "spark.kubernetes.authenticate.executor.serviceAccountName": "spark-executor"
    "spark.hadoop.fs.s3a.endpoint": "http://localstack-service.localstack.svc.cluster.local:4566"
    "spark.hadoop.fs.s3a.access.key": "test"
    "spark.hadoop.fs.s3a.secret.key": "test"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
    "spark.jars.packages": "org.apache.hadoop:hadoop-aws:3.3.4,com.amazonaws:aws-java-sdk-bundle:1.12.262"
    "spark.driver.extraJavaOptions": "-Dcom.amazonaws.services.s3.enableV4=true"
    "spark.executor.extraJavaOptions": "-Dcom.amazonaws.services.s3.enableV4=true"
  
  # Dependencies
  deps:
    jars:
      - "https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.4/hadoop-aws-3.3.4.jar"
      - "https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.12.262/aws-java-sdk-bundle-1.12.262.jar"
  
  # Restart policy
  restartPolicy:
    type: OnFailure
    onFailureRetries: 3
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  
  # Driver configuration
  driver:
    cores: 1
    coreLimit: "1200m"
    memory: "1g"
    memoryOverhead: "400m"
    labels:
      version: 3.5.0
      app: scala-data-processing
      component: driver
    serviceAccount: spark-driver
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "test"
      - name: AWS_SECRET_ACCESS_KEY
        value: "test"
      - name: AWS_DEFAULT_REGION
        value: "us-east-1"
      - name: AWS_ENDPOINT_URL
        value: "http://localstack-service.localstack.svc.cluster.local:4566"
    
  # Executor configuration
  executor:
    cores: 1
    instances: 2
    memory: "1g"
    memoryOverhead: "400m"
    labels:
      version: 3.5.0
      app: scala-data-processing
      component: executor
    serviceAccount: spark-executor
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "test"
      - name: AWS_SECRET_ACCESS_KEY
        value: "test"
      - name: AWS_DEFAULT_REGION
        value: "us-east-1"
      - name: AWS_ENDPOINT_URL
        value: "http://localstack-service.localstack.svc.cluster.local:4566"
  
  # Monitoring configuration
  monitoring:
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
    prometheus:
      jmxExporterJar: "/opt/jmx_prometheus_javaagent.jar"
      port: 8090

---
# Simple Scala Spark Pi calculation example
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: scala-spark-pi
  namespace: spark
  labels:
    app: scala-spark-pi
spec:
  type: Scala
  mode: cluster
  image: "apache/spark:3.5.0-scala2.12-java11-python3-ubuntu"
  imagePullPolicy: Always
  mainClass: "org.apache.spark.examples.SparkPi"
  mainApplicationFile: "local:///opt/spark/examples/jars/spark-examples_2.12-3.5.0.jar"
  sparkVersion: "3.5.0"
  arguments:
    - "1000"
  
  sparkConf:
    "spark.kubernetes.namespace": "spark"
    "spark.kubernetes.authenticate.driver.serviceAccountName": "spark-driver"
    "spark.kubernetes.authenticate.executor.serviceAccountName": "spark-executor"
    "spark.kubernetes.container.image.pullPolicy": "Always"
  
  restartPolicy:
    type: Never
  
  driver:
    cores: 1
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.5.0
      app: scala-spark-pi
    serviceAccount: spark-driver
    
  executor:
    cores: 1
    instances: 1
    memory: "512m"
    labels:
      version: 3.5.0
      app: scala-spark-pi
    serviceAccount: spark-executor
  
  monitoring:
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
